{"version":3,"sources":["./src/app/twitter/twitter.component.ts","./src/app/twitter/twitter.component.html","./src/environments/environment.ts","./src/app/my-tweets/my-tweets.component.html","./src/app/my-tweets/my-tweets.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/resetpassword/resetpassword.component.ts","./src/app/resetpassword/resetpassword.component.html","./src/app/all-users/all-users.component.html","./src/app/all-users/all-users.component.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;ICwB9D,wEAAsF;IAAlC,sYAAiB;IAAiB,mEAGhF;IAAA,gEACN;IAAA,4DAAI;;;;IACJ,wEAAuE;IAApB,0YAAmB;IAAC,mEACjE;IAAA,gEACN;IAAA,4DAAI;;;;IAMN,+EACqB;IADsC,mWAAuB;IAC7D,4DAAW;;;IAD2B,qFAAuB;;;;IAElF,4EACqC;IAAnC,geAAkC;IAAC,wEAAa;IAAA,4DAAS;;;IAC3D,sEAA6C;IAE3C,0EAA+B;IAAA,uDAA+B;IAAA,2EAAmB;IAAA,uDAAgB;IAAA,4DAAO;IACxG,4DAAM;IACN,sEAAK;IAAC,uDAAsB;IAAA,4DAAM;IAEpC,4DAAM;;;IAJ2B,0DAA+B;IAA/B,yGAA+B;IAAmB,0DAAgB;IAAhB,iFAAgB;IAE3F,0DAAsB;IAAtB,iGAAsB;;;;IA/BhC,0EAA+D;IAC7D,sEAAK;IACH,0EAAiB;IAEf,qEAA+E;IAC/E,0EAAwB;IAAA,uDAAwB;IAAA,2EAAmB;IAAA,uDAAU;IAAA,4DAAO;IAAA,4DAAM;IAC5F,4DAAM;IACN,sEAAK;IAAC,uDAAgB;IAAA,4DAAM;IAC9B,4DAAM;IACN,2EAAiB;IACf,iHAII;IACJ,iHAEI;IAEJ,yEAAmE;IAArC,2UAAkB,IAAI,KAAC;IAAc,kEACnE;IAAA,4DAAI;IAEN,4DAAM;IACN,+HACgC;IAChC,2HAC2D;IAC3D,qHAMM;IACR,4DAAM;;;;;IA7BwB,0DAAwB;IAAxB,iGAAwB;IAAmB,0DAAU;IAAV,0EAAU;IAEzE,0DAAgB;IAAhB,0FAAgB;IAGS,0DAAmB;IAAnB,yFAAmB;IAKnB,0DAAkB;IAAlB,wFAAkB;IAQxC,0DAAc;IAAd,oFAAc;IAEhB,0DAAc;IAAd,oFAAc;IAEE,0DAAkB;IAAlB,sFAAkB;;ADhCxC,MAAM,gBAAgB;IAM3B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QALpE,iBAAiB;QACjB,cAAS,GAAmB,EAAE,CAAC;QAE/B,UAAK,GAAiB,EAAE,CAAC;QAGvB,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;IACnB,CAAC;IAKF,QAAQ;QACN,wBAAwB;QAExB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAEhD,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,EAAE;gBACjC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;gBAC3C,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;gBACjC,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK,CAAC;gBACzB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;gBACpC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;gBAChC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;gBAChC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;gBAEjC,IAAG,IAAI,GAAC,EAAE,EACV;oBACE,KAAK,CAAC,IAAI,GAAC,IAAI,GAAC,WAAW,CAAC;iBAC7B;qBACI,IAAG,IAAI,GAAC,EAAE,IAAI,GAAG,IAAE,EAAE,EAC1B;oBACI,KAAK,CAAC,IAAI,GAAC,GAAG,GAAC,YAAY,CAAC;iBAC/B;qBACG;oBACF,KAAK,CAAC,IAAI,GAAC,IAAI,GAAC,WAAW,CAAC;iBAC7B;gBAID,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;YAEpB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG,IAAI,wDAAS,CAAC;YAClC,OAAO,EAAE,IAAI,0DAAW,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAE;YAC1D,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAE;SAClC,CAAC;IAGJ,CAAC;IAED,SAAS,CAAC,cAAmB;QAC3B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE5B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAC1E,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QAEvB,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAErB,CAAC,CAAC;QACF,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,IAAI,CAAC,KAAU;QACb,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,KAAU;QACf,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,WAAW,CAAC,KAAS,EAAC,CAAK;QACzB,MAAM,OAAO,GAAE,CAAC;YACd,KAAK,EAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC;YACrC,OAAO,EAAC,KAAK;YACb,SAAS,EAAC,IAAI,CAAC,SAAS;SACzB,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAC,EAAE;YAChE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAEX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEnB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC;QACtB,CAAC,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;;gFA/FU,gBAAgB;gGAAhB,gBAAgB;QCV7B,0EAAmC;QACjC,yEAAoD;QAClD,sEAA+B;QAE/B,yEACuB;QACzB,4DAAM;QACN,yEAAwG;QACtG,4EAAiG;QAApC,wIAAS,iCAAyB,IAAC;QAAC,qEAAU;QAAA,4DAAS;QACtH,4DAAM;QAIR,4DAAO;QACP,yEAA8B;QAC5B,6GAkCM;QACR,4DAAM;QAGN,yEAAsB;QACpB,wEAAM;QAAA,wEAAuB;QAAA,0EAAc;QAAA,4DAAI;QAAA,4DAAO;QACxD,4DAAM;QAEN,0EAAsB;QACpB,wEAAM;QAAA,yEAAuB;QAAA,kEAAM;QAAA,4DAAI;QAAA,4DAAO;QAChD,4DAAM;;QA3DA,yFAA4B;QAeM,0DAAU;QAAV,+EAAU;;;;;;;;;;;;;;ACflD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;ICG7D,0EAAgE;IAE9D,yEAAwB;IAAA,uDAA+B;IAAA,0EAAmB;IAAA,uDAAgB;IAAA,4DAAO;IACjG,4DAAM;IACN,sEAAK;IAAC,uDAAsB;IAAA,4DAAM;IAEpC,4DAAM;;;IAJoB,0DAA+B;IAA/B,wGAA+B;IAAmB,0DAAgB;IAAhB,gFAAgB;IAEpF,0DAAsB;IAAtB,gGAAsB;;;;IAjBhC,yEAAgD;IAC9C,sEAAK;IACH,yEAAiB;IAEf,oEAA+E;IAC/E,yEAAwB;IAAA,oEAAS;IAAA,0EAAmB;IAAA,uDAAU;IAAA,4DAAO;IAAA,4DAAM;IAC7E,4DAAM;IACN,sEAAK;IAAC,uDAAgB;IAAA,4DAAM;IAE5B,wEAAM;IAAA,gFAAoB;IAAA,4DAAO;IAAA,iEAAI;IACrC,8EAAgG;IAA5B,2VAA2B;IAAC,mEAAO;IAAA,4DAAS;IAClH,4DAAM;IAAA,iEAAI;IAEV,sHAMM;IACR,4DAAM;;;IAfoD,0DAAU;IAAV,0EAAU;IAE1D,0DAAgB;IAAhB,0FAAgB;IAMoB,0DAAkB;IAAlB,sFAAkB;;ACR7D,MAAM,iBAAiB;IAG5B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACnD,IAAI,CAAC,KAAK,GAAC,QAAQ,CAAC;QACxB,CAAC,CAAC;IAEF,CAAC;IAED,MAAM,CAAC,KAAS;QAEd,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;QAExD,CAAC,EAAC,CAAC,KAAK,EAAC,EAAE;YACT,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CACE,CAAC;IACN,CAAC;;kFApBU,iBAAiB;iGAAjB,iBAAiB;QDV9B,yEAA6B;QAC3B,yEAAkB;QAChB,wEAAmC;QAAA,oEAAS;QAAA,4DAAK;QACnD,4DAAM;QAAA,gEAAI;QACV,yEAA8B;QAC5B,8GAoBM;QACR,4DAAM;QACR,4DAAM;;QAtBoC,0DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;;;;;;;;;AEE3C,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;KACf;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,2EAA+B;;;;;;;;;;;;;;ACD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAEU;AACR;AAEF;AACT;AACU;AACG;AACG;AACkB;AACrB;AACQ;AACA;;AAyB7D,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACd,kEAAmB;YACnB,qEAAgB;SACd;oIAIU,SAAS,mBApBlB,2DAAY;QACZ,wEAAe;QACf,qEAAc;QACd,2EAAgB;QAChB,6FAAsB;QACtB,wEAAe;QACf,iFAAiB;QACjB,iFAAiB,aAIjB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACd,kEAAmB;QACnB,qEAAgB;;;;;;;;;;;;;;;;;;;;;;;;ICkBP,wEACwB;IAAA,gEAAK;IAAA,4DAAI;;;IAQjC,wEACuB;IAAA,+DAAI;IAAA,4DAAI;;;IAG/B,wEACuB;IAAA,mEAAQ;IAAA,4DAAI;;;IAGnC,wEACwB;IAAA,wEAAa;IAAA,4DAAI;;;IAGzC,wEACwB;IAAA,mEAAQ;IAAA,4DAAI;;;IAOtC,wEAA2C;IAEzC,wEAAiF;IAAA,iEAAM;IAAA,4DAAI;IAC7F,4DAAK;;AC1EN,MAAM,eAAe;IAE1B,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAD3C,SAAI,GAAY,KAAK,CAAC;IAGrB,CAAC;IAEF,QAAQ;QACR,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAE1C,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;;8EAZU,eAAe;+FAAf,eAAe;QD8B5B,yEAA4D;QAC1D,yEAA6B;QAE3B,uEAAuC;QAAA,oEAAiE;QAAC,4DAAI;QAC7G,4EAAoG;QAClG,qEAAyC;QAC3C,4DAAS;QACT,yEAA4D;QAC1D,wEAA+B;QAC7B,wEAAqB;QAGnB,uGACiC;QACnC,4DAAK;QAAA,qFACL;QAKA,yEAAqB;QACnB,0GAC+B;QACjC,4DAAK;QACL,yEAAqB;QACnB,0GACmC;QACrC,4DAAK;QACL,yEAAqB;QACnB,0GACyC;QAC3C,4DAAK;QACL,yEAAqB;QACnB,0GACoC;QACtC,4DAAK;QAML,4GAGK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAnCO,0DAAmB;QAAnB,mFAAmB;QASnB,0DAAkB;QAAlB,kFAAkB;QAIlB,0DAAkB;QAAlB,kFAAkB;QAIlB,0DAAmB;QAAnB,mFAAmB;QAInB,0DAAmB;QAAnB,mFAAmB;QAOnB,0DAAmB;QAAnB,mFAAmB;;;;;;;;;;;;;;AE/EhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;ICsBhE,0EAAyD;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,oFAAgB;;ADbtE,MAAM,sBAAsB;IAKjC,YAAoB,WAAuB,EAAS,MAAa;QAA7C,gBAAW,GAAX,WAAW,CAAY;QAAS,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAEtE,QAAQ;QAEN,IAAI,CAAC,iBAAiB,GAAG,IAAI,wDAAS,CAAC;YACrC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzD,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzD,OAAO,EAAE,IAAI,0DAAW,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAE;SAEzD,CAAC;IACN,CAAC;IAED,aAAa,CAAC,iBAAqB;QAEjC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE/B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAY,EAAE,EAAE;YAC7E,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtB,IAAG,QAAQ,CAAC,YAAY,KAAG,IAAI,EAC/B;gBACE,IAAI,CAAC,YAAY,GAAC,QAAQ,CAAC,YAAY,CAAC;aACzC;QAEH,CAAC,EAAC,CAAC,KAAK,EAAE,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEvC,CAAC;;4FAnCU,sBAAsB;sGAAtB,sBAAsB;QCWnC,yEAAgC;QAC9B,yEAAkB;QAChB,kHAA+E;QAC/E,wEAAmC;QAAA,wEAAa;QAAA,4DAAK;QACrD,yEAAuB;QACrB,0EAAsC;QACpC,yEAAsB;QACpB,yEAAkC;QAChC,2EAAyB;QAAA,+EAAmB;QAAA,4DAAQ;QACpD,uEACyD;QAC3D,4DAAM;QACN,4DAAM;QACN,0EAAsB;QACtB,2EAA6B;QAC3B,6EAAyB;QAAA,+EAAmB;QAAA,4DAAQ;QACpD,wEACyD;QAC3D,4DAAM;QACN,4DAAM;QACN,2EAAwG;QACtG,8EACwC;QAD6B,+IAAS,wCAAgC,IAAC;QACvE,iEAAK;QAAA,4DAAS;QACxD,4DAAM;QAEV,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA1BmC,0DAAkB;QAAlB,kFAAkB;QAG/C,0DAA+B;QAA/B,4FAA+B;QAiB7B,2DAAqC;QAArC,kGAAqC;;;;;;;;;;;;;;;;;;;;;;;;;IC7BjD,yEAA+C;IAG7C,yEAAuB;IACrB,yEAAiB;IAEf,oEAA+E;IAAA,gEAAI;IACnF,yEAAyB;IAAA,uDAAsB;IAAA,4DAAM;IAAA,4DAAM;IAC7D,4DAAM;IACR,4DAAM;;;IAFuB,0DAAsB;IAAtB,+FAAsB;;ACZhD,MAAM,iBAAiB;IAG5B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAGzE,QAAQ;QAEN,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClD,IAAI,CAAC,KAAK,GAAC,QAAQ,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;;kFAXY,iBAAiB;iGAAjB,iBAAiB;QDA9B,yEAA6B;QAC3B,yEAAkB;QAClB,wEAAmC;QAAA,4EAAiB;QAAA,4DAAK;QACzD,4DAAM;QAAA,gEAAI;QACV,yEAA8B;QAC9B,6GASQ;QACR,4DAAM;QACR,4DAAM;;QAXiC,0DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;AEb/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;ICChE,0EAAyD;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,oFAAgB;;;IAQjE,0EAAyG;IACvG,uEAAW;IAAA,4DAAM;;;IAQnB,0EACoF;IAAA,2EACpF;IAAA,4DAAM;;;IAWR,0EAAmG;IAAA,yEAE/F;IAAA,4DAAM;;;IAmBR,0EACkF;IAAA,yEAAc;IAAA,4DAAM;;;IAWxG,0EAAqD;IACnD,kFAEF;IAAA,4DAAM;;;AD1DT,MAAM,eAAe;IAM1B,YAAoB,WAAuB,EAAS,MAAa;QAA7C,gBAAW,GAAX,WAAW,CAAY;QAAS,WAAM,GAAN,MAAM,CAAO;IAEjE,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,eAAe,GAAC,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpE,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtD,IAAI,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,QAAQ,EAAE,IAAI,0DAAW,CAAC,MAAM,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAEvD,CAAC;IACN,CAAC;IAED,YAAY,CAAC,UAAc;QAEzB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;QAEvB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAY,EAAE,EAAE;YACpE,IAAG,QAAQ,CAAC,IAAI,KAAG,SAAS,EAC5B;gBACE,IAAI,CAAC,YAAY,GAAC,QAAQ,CAAC,IAAI,CAAC;aACjC;YAED,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACvB,CAAC,EAAC,CAAC,KAAK,EAAE,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAEtC,CAAC;IAGD,IAAI,aAAa;QAClB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC;IAExE,CAAC;;8EAhDM,eAAe;+FAAf,eAAe;QCV5B,yEAAgC;QAC9B,yEAAkB;QAChB,2GAA+E;QAC/E,wEAAkC;QAAA,gFAAqB;QAAA,4DAAK;QAC5D,yEAAuB;QACrB,0EAA+B;QAC7B,yEAAsB;QACpB,yEAA4B;QAC1B,2EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,uEAAsH;QACtH,8GACmB;QACrB,4DAAM;QACR,4DAAM;QAEN,0EAAsB;QACpB,2EAAoD;QAClD,6EAAwB;QAAA,sEAAU;QAAA,4DAAQ;QAC1C,wEAA4H;QAC5H,8GAEM;QACR,4DAAM;QACN,2EAAoD;QAClD,6EAAuB;QAAA,qEAAS;QAAA,4DAAQ;QACxC,wEAAgH;QAClH,4DAAM;QACR,4DAAM;QAEN,2EAAoD;QAClD,6EAAgB;QAAA,oEAAQ;QAAA,4DAAQ;QAChC,wEAAkG;QAClG,8GAEU;QACZ,4DAAM;QASN,2EAAoD;QAClD,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAA0G;QAAA,iEAC1G;QAAA,wEAAmG;QAAA,mEACrG;QAAA,4DAAM;QACN,0EAAsB;QACpB,2EAAoD;QAClD,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,wEAAkH;QAClH,8GACsG;QAExG,4DAAM;QAEN,2EAAoD;QAClD,6EAA6B;QAAA,2EAAe;QAAA,4DAAQ;QACpD,6EAC0F;QADnE,6LAA6B;QAApD,4DAC0F;QAG5F,4DAAM;QACN,8GAGM;QAER,4DAAM;QAEN,2EAAiB;QACf,2EAAsD;QACpD,8EACkD;QAD0B,wIAAS,gCAAwB,IAAC;QAC5D,kEAAM;QAAA,4DAAS;QACnE,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QAIR,4DAAM;QAER,4DAAM;;QAnFmC,0DAAkB;QAAlB,kFAAkB;QAG/C,0DAAwB;QAAxB,qFAAwB;QAKQ,0DAAuE;QAAvE,2IAAuE;QAUpG,0DAA+E;QAA/E,mJAA+E;QAYpD,0DAAiE;QAAjE,qIAAiE;QAsB5F,2DAA6E;QAA7E,iJAA6E;QAMzD,0DAA6B;QAA7B,wFAA6B;QAKtB,0DAAmB;QAAnB,mFAAmB;QAU/C,0DAA+C;QAA/C,gHAA+C;;;;;;;;;;;;;;AC1E7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACa;AACX;AACW;AACa;AACrB;AACG;;;AAE/D,MAAM,MAAM,GAAW,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,wEAAe,EAAC;IAC/D,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,qEAAc,EAAC;IACrC,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,qEAAc,EAAC;IACpC,EAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,2EAAgB,EAAC;IAC5C,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,6FAAsB,EAAC;IAC/C,EAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,gFAAiB,EAAC;IAC7C,EAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAC,gFAAiB,EAAC,CAAC,CAAC;AAQzC,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACpBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;AAa7D,MAAM,cAAc;IAIzB,YAAoB,WAAuB,EAAS,MAAa;QAA7C,gBAAW,GAAX,WAAW,CAAY;QAAS,WAAM,GAAN,MAAM,CAAO;IAGjE,CAAC;IAGD,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD,CAAC;IAEN,CAAC;IAED,WAAW,CAAC,SAAa;QAEvB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAY,EAAE,EAAE;YACrE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAG,QAAQ,CAAC,YAAY,KAAG,IAAI,EAC/B;gBACE,IAAI,CAAC,YAAY,GAAC,QAAQ,CAAC,YAAY,CAAC;aACzC;iBACG;gBACF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC/B,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;aACpC;QACH,CAAC,EAAC,CAAC,KAAK,EAAE,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC;IACP,CAAC;;4EArCU,cAAc;8FAAd,cAAc;QCkC3B,yEAA6B;QACzB,yEAAiB;QACT,yEAA8B;QAC1B,yEAAuB;QACnB,yEAAkB;QACd,wEAAwB;QAAA,gEAAK;QAAA,4DAAK;QAClC,yEAAuB;QACnB,0EAAkE;QAApC,0IAAY,8BAAsB,IAAC;QAC7D,yEAAwB;QACtB,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,wEAAkG;QAEpG,4DAAM;QACN,0EAAwB;QACtB,6EAAiB;QAAA,qEAAS;QAAA,4DAAQ;QAClC,wEAA8G;QAEhH,4DAAM;QACN,8EAA0D;QAAA,iEAAK;QAAA,4DAAS;QAI5E,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACL,2EAAgC;QAC7B,8EAA0B;QAAA,+EAAmB;QAAA,4DAAS;QACtD,qEAAiB;QACjB,yEAAoF;QAAA,kEAAM;QAAA,4DAAI;QAClG,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA1BwB,0DAAuB;QAAvB,oFAAuB;;;;;;;;;;;;;;ACpDzD;AAAA;AAAA;AAAA;AAAA;AAA4D;;;AAKrD,MAAM,WAAW;IAWtB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QATnC,SAAI,GAAG,IAAI,4CAAO,EAAO,CAAC;IAWjC,CAAC;IATM,OAAO,CAAC,OAAY;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;IACO,OAAO;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;IAChC,CAAC;IAMD,OAAO,CAAC,IAAQ;QACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kDAAkD,EAAE,IAAI,CAAC,CAAC;IACxF,CAAC;IAID,SAAS,CAAC,IAAQ;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,+CAA+C,EAAE,IAAI,CAAC,CAAC;IACrF,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;IAClF,CAAC;IAED,QAAQ,CAAC,IAAQ;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mDAAmD,EAAC,IAAI,CAAC,CAAC;IACxF,CAAC;IAED,SAAS,CAAC,IAAQ;QAEhB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,+CAA+C,EAAC,IAAI,CAAC,CAAC;IACnF,CAAC;IAED,YAAY,CAAC,IAAQ;QAEnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,+CAA+C,EAAC,IAAI,CAAC,CAAC;IACpF,CAAC;IAED,WAAW;QAET,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;IACpF,CAAC;IAED,YAAY;QAEV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,4DAA4D,GAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3H,CAAC;IAED,UAAU,CAAC,KAAS;QAElB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,0DAA0D,GAAC,KAAK,CAAC,CAAC;IAClG,CAAC;;sEA1DU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;ACN2B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-twitter',\n  templateUrl: './twitter.component.html',\n  styleUrls: ['./twitter.component.css']\n})\nexport class TwitterComponent implements OnInit {\n  //likeArray: any;\n  likeArray: Array<boolean> = [];\n  replyDesc: String;\n  reply: Array<boolean>=[];\n\n  constructor(private userService: UserService, private router: Router) {\n    this.replyDesc='';\n   }\n  tweets: any;\n  posttweetsform: any;\n\n\n  ngOnInit(): void {\n    // this.likeArray=false;\n    \n    this.userService.gettweets().subscribe(response => {\n\n      this.tweets = response;\n      this.tweets.forEach((tweet: any) => {\n        var date1 = new Date(tweet.date).getTime();\n        var date2 = new Date().getTime();\n        var msec = date2 - date1;\n        var mins = Math.floor(msec / 60000);\n        var hrs = Math.floor(mins / 60);\n        var days = Math.floor(hrs / 24);\n        var yrs = Math.floor(days / 365);\n\n        if(mins<60)\n        {\n          tweet.date=mins+' mins ago';\n        }\n        else if(mins>60 && hrs<=24)\n        {\n            tweet.date=hrs+' hours ago';\n        }\n        else{\n          tweet.date=days+' days ago';\n        }\n        \n\n\n        this.likeArray.push(false);\n        this.reply.push(false);\n        this.replyDesc='';\n        \n      });\n    })\n\n    this.posttweetsform = new FormGroup({\n      'email': new FormControl(sessionStorage.getItem('email'),),\n      'tweetDesc': new FormControl('',)\n    })\n\n\n  }\n\n  posttweet(posttweetsform: any) {\n    console.log(posttweetsform);\n\n    this.userService.addtweet(posttweetsform.value).subscribe((response: any) => {\n      console.log(response)\n\n    }, (error) => {\n      console.log(error);\n      \n    })\n    this.ngOnInit();\n  }\n\n  like(index: any) {\n    this.likeArray[index] = true;\n  }\n\n  unlike(index: any) {\n    this.likeArray[index] = false;\n  }\n\n  postcomment(index:any,i:any){\n    const request= ({\n      email:sessionStorage.getItem('email'),\n      tweetId:index,\n      replyDesc:this.replyDesc\n    });\n    this.userService.postcomments(request).subscribe((response: any)=>{\n      console.log(response);\n      this.ngOnInit();\n    }, (error) => {\n      \n      console.log(error);\n      \n      this.reply[i]=false;\n    })\n    \n    console.log(index);\n  }\n\n\n}\n","<form [formGroup]=\"posttweetsform\">\n  <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n    <label for=\"tweetDesc\"></label>\n    <!-- <input type=\"textarea\" formControlName='tweetDesc' id=\"tweetDesc\" placeholder=\"Enter your Tweet\"> -->\n    <textarea id=\"tweetDesc\" name=\"tweetDesc\" formControlName='tweetDesc' placeholder=\"Enter your Tweet\" rows=\"4\"\n      cols=\"50\"></textarea>\n  </div>\n  <div class=\"form-group d-flex justify-content-between align-items-center col-lg-12 col-md-12 col-sm-12\">\n    <button class=\"btn btn-primary\" type=\"submit\" value=\"submit\" (click)=\"posttweet(posttweetsform)\">Post Tweet</button>\n  </div>\n\n\n\n</form>\n<div class=\"col-md-6 mx-auto\">\n  <div class=\"card-card1\" *ngFor=\"let f of tweets;let i = index\">\n    <div>\n      <div class=\"row\">\n\n        <img src=\"assets/avatar-logo.jpg\" alt=\"boy in a jacket\" width=\"50\" height=\"60\">\n        <div class=\" text-dark\">Posted By {{f.tweetBy}} <span class=\"pl-5\">{{f.date}}</span></div>\n      </div>\n      <div> {{f.tweetDesc}} </div>\n    </div>\n    <div class=\"row\">\n      <a href=\"javascript:void(0);\" *ngIf=\"!likeArray[i]\" (click)=\"like(i)\" class=\"fs-blue\"><i\n          class=\"fa fa-thumbs-up fs-blue\">\n\n        </i>Like\n      </a>\n      <a href=\"javascript:void(0);\" *ngIf=\"likeArray[i]\" (click)=\"unlike(i)\"><i class=\"fa fa-thumbs-up\">\n        </i>Like\n      </a>\n\n      <a href=\"javascript:void(0);\" (click)=\"reply[i]=true\" class=\"pl-5\">Reply\n      </a>\n\n    </div>\n    <textarea *ngIf=\"reply[i]\" id=\"replyDesc\" name=\"replyDesc\" [(ngModel)]='replyDesc' placeholder=\"Enter your Reply\"\n      rows=\"4\" cols=\"50\"></textarea>\n    <button *ngIf=\"reply[i]\" class=\"btn btn-primary\" type=\"submit\" value=\"submit\"\n      (click)=\"postcomment(f.tweetId,i)\">Post Comments</button>\n    <div *ngFor=\"let comment of f.replyDTOList;\">\n\n      <div class=\"bg-info text-dark\">Commented By {{comment.email}} <span class=\"pl-5\">{{comment.date}}</span>\n      </div>\n      <div> {{comment.replyDesc}} </div>\n\n    </div>\n  </div>\n</div>\n\n\n<div class=\"row mx-3\">\n  <span><a routerLink='/reset'>Reset Password</a></span>\n</div>\n\n<div class=\"row mx-3\">\n  <span><a routerLink='/login'>Logout</a></span>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container-fluid\">\n  <div class=\"card\">\n    <h5 class=\"card-header text-light\">TweetList</h5>\n  </div><br>\n  <div class=\"col-md-6 mx-auto\">\n    <div class=\"card-card1\" *ngFor=\"let f of tweet\">\n      <div>\n        <div class=\"row\">\n\n          <img src=\"assets/avatar-logo.jpg\" alt=\"boy in a jacket\" width=\"50\" height=\"60\">\n          <div class=\" text-dark\">Posted on<span class=\"pl-5\">{{f.date}}</span></div>\n        </div>\n        <div> {{f.tweetDesc}} </div>\n\n        <span>delete your tweet !?</span><br>\n        <button class=\"btn btn-outline-danger\" type=\"submit\" value=\"submit\" (click)=\"delete(f.tweetId)\">Delete </button>\n      </div><br>\n\n      <div class=\"card-card2\" *ngFor=\"let comment of f.replyDTOList;\">\n\n        <div class=\" text-dark\">Commented By {{comment.email}} <span class=\"pl-5\">{{comment.date}}</span>\n        </div>\n        <div> {{comment.replyDesc}} </div>\n\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-my-tweets',\n  templateUrl: './my-tweets.component.html',\n  styleUrls: ['./my-tweets.component.css']\n})\nexport class MyTweetsComponent implements OnInit {\n\n \n  constructor(private userService: UserService, private router: Router) { }\n  tweet:any;\n  ngOnInit(): void {\n    this.userService.getAllTweets().subscribe(response => {\n      this.tweet=response;\n  })\n\n  }\n\n  delete(index:any)\n  {\n    this.userService.deletTweet(index).subscribe(response =>{\n      \n    },(error)=>{\n      this.ngOnInit();\n    }\n      );\n  }\n\n}\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FSE';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { TwitterComponent } from './twitter/twitter.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AllUsersComponent } from './all-users/all-users.component';\nimport { MyTweetsComponent } from './my-tweets/my-tweets.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    TwitterComponent,\n    ResetpasswordComponent,\n    HeaderComponent,\n    AllUsersComponent,\n    MyTweetsComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n ReactiveFormsModule,\n HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- <nav class=\"navbar navbar-expand-lg bg-primary navbar-dark text-light\">\n    <section class=\"logo\">\n      <a href=\"#\" class=\"navbar-brand\">\n        <img src=\"assets/twitter-logo.jpg\" alt=\"Girl in a jacket\" width=\"200\" height=\"70\"></a>\n    </section>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarcollapse\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <section class=\"collapse navbar-collapse\" id=\"navbarcollapse\">\n      <ul class=\"navbar-nav ml-auto\">\n<li *ngIf=\"flag === false\" class=\"nav-item active\">\n    <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n  </li>\n\n  <li *ngIf=\"flag === false\" class=\"nav-item active\">\n    <a class=\"nav-link\" routerLink=\"/signup\">Register</a>\n  </li>\n\n  <li *ngIf=\"flag === true\" class=\"nav-item active\">\n    <a class=\"nav-link\" routerLink=\"/homepage\">Home</a>\n  </li>\n\n  <li *ngIf=\"flag === true\" class=\"nav-item active\">\n    <a class=\"nav-link\" routerLink=\"/allUsers\">AllUsers</a>\n  </li>\n\n  <li *ngIf=\"flag === true\" class=\"nav-item active\">\n    <a class=\"nav-link\" routerLink=\"/myTweet\">MyTweets</a>\n  </li>\n  <li *ngIf=\"flag === true\" class=\"nav-item active\">\n    <a class=\"nav-link\" routerLink=\"/reset\">ResetPassword</a>\n  </li>\n\n  <li *ngIf=\"flag === true\" class=\"nav-item active\">\n    <a class=\"nav-link\" routerLink=\"/login\">Logout</a>\n  </li>\n</ul>\n</section>\n</nav> -->\n<nav class=\"navbar navbar-expand-md navbar-light bg-light \">\n  <div class=\"container-fluid\">\n    \n    <a href=\"#\" class=\"navbar-brand title\"><img src=\"assets/img1.jpg\" alt=\"Twitter\" width=\"200\" height=\"70\"> </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <!-- <button type=\"button\" class=\"btn btn-primary\">Login</button> -->\n\n          <a routerLink=\"/login\" routerLinkActive=\"active\" class=\"btn btn-primary \"\n            *ngIf=\"flag == false\">Login</a>\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;\n        <!-- <li class=\"nav-item\">\n          <a routerLink=\"/login\" routerLinkActive=\"active\" class=\"btn btn-primary loginbtn\"\n            *ngIf=\"flag == false\">Register</a>\n        </li> -->\n\n        <li class=\"nav-item\">\n          <a routerLink=\"/homepage\" routerLinkActive=\"active\" class=\"btn btn-primary loginbtn\"\n            *ngIf=\"flag == true\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/allUsers\" routerLinkActive=\"active\" class=\"btn btn-primary loginbtn\"\n            *ngIf=\"flag == true\">AllUsers</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/reset\" routerLinkActive=\"active\" class=\"btn btn-primary loginbtn\"\n            *ngIf=\"flag === true\">ResetPassword</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/myTweet\" routerLinkActive=\"active\" class=\"btn btn-primary loginbtn\"\n            *ngIf=\"flag === true\">MyTweets</a>\n        </li>\n        <!-- <li class=\"nav-item\">\n          <a routerLink=\"/myTweet\" routerLinkActive=\"active\" class=\"btn btn-primary loginbtn\"\n            *ngIf=\"flag === true\">MyTweets</a>\n        </li> -->\n\n        <li *ngIf=\"flag === true\" class=\"nav-item\">\n          <!-- <button type=\"button\" class=\"btn btn-primary\">Login</button> -->\n          <a routerLink=\"/login\" routerLinkActive=\"active\" class=\"btn btn-danger loginbtn\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  flag: boolean = false;\n  constructor(private userService:UserService) {\n\n   }\n\n  ngOnInit(): void {\n  this.userService.setFlag(false);\n    this.userService.getFlag().subscribe(flag => {\n\n      this.flag=flag;\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  resetpasswordform:any;\n  errorMessage:any;\n  successMessage:any;\n  constructor(private userService:UserService,private router:Router) { }\n\n  ngOnInit()\n  {\n    this.resetpasswordform = new FormGroup({\n      'oldpassword': new FormControl('', [Validators.required]),\n      'newpassword': new FormControl('', [Validators.required]),\n      'email': new FormControl(sessionStorage.getItem('email'),)\n      \n      })\n  }\n\n  resetpassword(resetpasswordform:any)\n   {\n    console.log(resetpasswordform);\n    \n    this.userService.resetpass(resetpasswordform.value).subscribe((response:any) =>{  \n      console.log(response);\n\n      if(response.errorMessage!==null)\n      {\n        this.errorMessage=response.errorMessage;\n      }\n      \n    },(error) => {\n      console.log(error);\n       })\n       \n        this.router.navigate(['/login']);\n      \n  }\n\n}\n","<!-- <div class=\"alert alert-info small\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n\n<h2>RESET PASSWORD</h2>\n<form [formGroup]=\"resetpasswordform\">\n    <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n        <label for=\"oldpassword\"></label>\n        <input type=\"text\" formControlName='oldpassword' id=\"oldpassword\" placeholder=\"Enter your Old Password\" ngModel required>\n      </div>\n      <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n        <label for=\"newpassword\"></label>\n        <input type=\"text\" formControlName='newpassword' id=\"newpassword\" placeholder=\"Enter your New Password\" ngModel required>\n      </div>\n    <div\n        class=\"form-group d-flex justify-content-between align-items-center col-lg-12 col-md-12 col-sm-12\">\n        <button class=\"btn btn-primary\" type=\"submit\" value=\"submit\" (click)=\"resetpassword(resetpasswordform)\" [disabled]=\"!resetpasswordform.valid\">Reset</button>\n    </div>\n\n\n\n</form> -->\n\n<div class=\"container userform\">\n  <div class=\"card\">\n    <div class=\"alert alert-info small\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n    <h5 class=\"card-header text-white\">resetpassword</h5>\n    <div class=\"card-body\">\n      <form [formGroup]=\"resetpasswordform\">\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4 \">\n            <label for=\"oldpassword\">OldPasssword:&nbsp;</label>\n            <input type=\"text\" formControlName='oldpassword' id=\"oldpassword\" class=\"form-control\"\n              placeholder=\"Enter your Old Password\" ngModel required>\n          </div>\n          </div>\n          <div class=\"form-row\">\n          <div class=\"form-group col \">\n            <label for=\"newpassword\">NewPasssword:&nbsp;</label>\n            <input type=\"text\" formControlName='newpassword' id=\"newpassword\" class=\"form-control\"\n              placeholder=\"Enter your New Password\" ngModel required>\n          </div>\n          </div>\n          <div class=\"form-group d-flex justify-content-between align-items-center col-lg-12 col-md-12 col-sm-12\">\n            <button class=\"btn btn-outline-success\" type=\"submit\" value=\"submit\" (click)=\"resetpassword(resetpasswordform)\"\n              [disabled]=\"!resetpasswordform.valid\">Reset</button>\n          </div>\n        \n      </form>\n    </div>\n  </div>\n</div>","<!-- <h2>List of All Users</h2>\n<div class=\"col-lg-12 p-2 pb-5\" *ngFor=\"let f of users\">\n<div><div class=\"row\">\n      \n    <img src=\"assets/avatar-logo.jpg\" alt=\"boy in a jacket\" width=\"50\" height=\"60\">\n    <div class=\"bg-primary text-light\">User {{f.email}} </div></div>\n  </div>\n</div> -->\n\n<div class=\"container-fluid\">\n  <div class=\"card\">\n  <h5 class=\"card-header text-light\">List of all users</h5>\n  </div><br>\n  <div class=\"col-md-6 mx-auto\">\n  <div class=\"card-card1\"*ngFor=\"let f of users\">\n    \n    \n    <div class=\"card-body\"> \n      <div class=\"row\">\n      \n        <img src=\"assets/avatar-logo.jpg\" alt=\"boy in a jacket\" width=\"50\" height=\"60\"><br>\n        <div class=\" text-darkt\">Username- {{f.email}} </div></div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-all-users',\n  templateUrl: './all-users.component.html',\n  styleUrls: ['./all-users.component.css']\n})\nexport class AllUsersComponent implements OnInit {\n  \n\n  constructor(private userService: UserService, private router: Router) { }\n\n  users:any;\n  ngOnInit(): void {\n\n    this.userService.getAllUsers().subscribe(response => {\n      this.users=response;\n  })\n}\n\n}\n","import { Component, OnInit, ɵConsole } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  \n  signupForm:any;\n  errorMessage:any;\n  confirmPassword:any;\n \n  constructor(private userService:UserService,private router:Router) { \n    \n  }\n\n  ngOnInit()\n  {\n    this.confirmPassword='';\n    this.signupForm = new FormGroup({\n      'email': new FormControl('', [Validators.required,Validators.email]),\n      'firstName': new FormControl('', [Validators.required]),\n      'lastName': new FormControl(''),\n      'password': new FormControl('', [Validators.required]),\n      'id' : new FormControl('', [Validators.required]),\n      'gender': new FormControl('male', [Validators.required]),\n      //'contactNo':new FormControl('',[Validators.required])\n      })\n  }\n\n  signupsubmit(signupForm:any)\n  {\n    console.log(signupForm);\n    this.errorMessage=null;\n  \n    this.userService.addUser(signupForm.value).subscribe((response:any) =>{\n      if(response.data!==\"success\")\n      {\n        this.errorMessage=response.data;\n      }\n      \n      console.log(response)\n    },(error) => {\n      console.log(error);\n       })\n       \n        this.router.navigateByUrl(\"/login\");\n      \n      }\n\n      \n      get passwordCheck() {​​​​​​​\n     return !(this.signupForm.get('password').value === this.confirmPassword);\n  ​\n      }​\n  \n  \n}\n","<div class=\"container userform\">\n  <div class=\"card\">\n    <div class=\"alert alert-info small\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n    <h5 lass=\"card-header text-white\">Customer Registration</h5>\n    <div class=\"card-body\">\n      <form [formGroup]=\"signupForm\">\n        <div class=\"form-row\">\n          <div class=\"form-group col\">\n            <label for=\"Email\">Email</label>\n            <input type=\"text\" formControlName='email' id=\"user-name\" class=\"form-control\" placeholder=\"Enter User Name\" required>\n            <div class=\"text-danger small\" *ngIf=\"!signupForm.get('email').valid && signupForm.get('email').touched\">\n              Enter Email</div>\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n            <label for=\"first-name\">First Name</label>\n            <input type=\"text\" formControlName='firstName' id=\"first-name\" class=\"form-control\" placeholder=\"Enter First Name\" required>\n            <div class=\"text-danger small\"\n              *ngIf=\"!signupForm.get('firstName').valid && signupForm.get('firstName').touched\">Enter firstname\n            </div>\n          </div>\n          <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n            <label for=\"last-name\">Last Name</label>\n            <input type=\"text\" formControlName='lastName' id=\"last-name\" class=\"form-control\" placeholder=\"Enter Last Name\">\n          </div>\n        </div>\n\n        <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n          <label for=\"id\">login Id</label>\n          <input type=\"text\" formControlName='id' id=\"id\" placeholder=\"Enter login Id\" class=\"form-control\">\n          <div class=\"text-danger small\" *ngIf=\"!signupForm.get('id').valid && signupForm.get('id').touched\">Enter\n            Login\n            Id</div>\n        </div>\n        <!-- <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n          <label for=\"ContactNo\">Contact No</label>\n          <input type=\"text\" formControlName='id' id=\"id\" placeholder=\"Enter login Id\" class=\"form-control\">\n          <div class=\"text-danger small\" *ngIf=\"!signupForm.get('id').valid && signupForm.get('id').touched\">Enter\n            Login\n            Id</div>\n        </div> -->\n\n        <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n          <label for=\"gender\">Gender</label>\n          <input type=\"radio\" formControlName='gender' id=\"gender\" placeholder=\"Enter gender\" value=\"male\" selected>male\n          <input type=\"radio\" formControlName='gender' id=\"gender\" placeholder=\"Enter gender\" value=\"female\">female\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" formControlName='password' id=\"password\" class=\"form-control\" placeholder=\"Enter Password\">\n            <div class=\"text-danger small\"\n              *ngIf=\"!signupForm.get('password').valid && signupForm.get('password').touched\">Enter password</div>\n\n          </div>\n\n          <div class=\"form-group col-lg-6 col-md-6 col-sm-12\">\n            <label for=\"confirmpassword\">ConfirmPassword</label>\n            <input type=\"password\" [(ngModel)]='confirmPassword' [ngModelOptions]=\"{standalone: true}\"\n              id=\"confirmpassword\" class=\"form-control\" placeholder=\"Enter Confirm Password\" required>\n\n\n          </div>\n          <div class=\"text-danger small\" *ngIf=\"passwordCheck\">\n            Password do not match\n\n          </div>\n\n        </div>\n\n        <div class=\"row\">\n          <div class=\"form-group col-lg-12 col-md-12 col-sm-12\">\n            <button class=\"btn btn-outline-success btn-lg\" type=\"button\" value=\"submit\" (click)=\"signupsubmit(signupForm)\"\n              [disabled]=\"!signupForm.valid || passwordCheck\">SignUp</button>\n          </div>\n        </div>\n      </form>\n    </div>\n\n\n\n  </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllUsersComponent } from './all-users/all-users.component';\nimport { LoginComponent } from './login/login.component';\nimport { MyTweetsComponent } from './my-tweets/my-tweets.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { TwitterComponent } from './twitter/twitter.component';\n\nconst routes: Routes = [{path:\"signup\",component:SignupComponent},\n  {path:\"login\",component:LoginComponent},\n    {path:\"\",component:LoginComponent},\n  {path:\"homepage\",component:TwitterComponent},\n  {path:\"reset\",component:ResetpasswordComponent},\n  {path:\"allUsers\",component:AllUsersComponent},\n  {path:\"myTweet\",component:MyTweetsComponent}];\n\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserService } from '../user.service';\nimport { AuthenticationService } from './authentication.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginForm:any;\n  errorMessage:any;\n  constructor(private userService:UserService,private router:Router) { \n    \n    \n  }\n  \n\n  ngOnInit() {\n   \n    this.loginForm = new FormGroup({\n      'email': new FormControl('', [Validators.required]),\n      'password': new FormControl('', [Validators.required])\n      })\n\n  }\n\n  loginsubmit(loginForm:any)\n  {\n    console.log(loginForm);\n    this.errorMessage=null;\n    this.userService.loginuser(loginForm.value).subscribe((response:any) =>{\n      console.log(response)\n      if(response.errorMessage!==null)\n      {\n        this.errorMessage=response.errorMessage;\n      }\n      else{\n        this.userService.setFlag(true);\n        sessionStorage.setItem('email', response.email);\n        this.router.navigate(['/homepage'])\n      }\n    },(error) => {\n      console.log(error);\n       })\n  }\n  \n\n}\n","<!-- \n\n<div class=\"row\">\n    <div class=\"col-lg-4 col-md-4 col-sm-4\"></div>\n    <div class=\"col-lg-4 col-md-4 col-sm-4\">\n        <div class=\"container m-5 border\">\n            <div class=\"alert alert-info small\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n            <h2>LOGIN</h2>\n            <form #loginForm=\"ngForm\">\n                <div class=\"alert alert-info small\">Please login!</div>\n                <label for=\"username\">UserName: </label>\n                <input type=\"text\" id=\"email\" name=\"email\" ngModel required>\n                \n                <div class=\"row pl-3\"> \n                <label for=\"password\">Password .:</label>\n                <input type=\"password\" id=\"password\" name=\"password\" ngModel required>\n                </div>\n                \n                <div class=\"row\">\n                    <div\n                        class=\"form-group d-flex justify-content-between align-items-center col-lg-12 col-md-12 col-sm-12\">\n                        <button class=\"btn btn-primary\" type=\"submit\" value=\"submit\" (click)=\"loginsubmit(loginForm)\">Login</button>\n                        \n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"col-lg-4 col-md-4 col-sm-4\"></div>\n</div>\n\n>\n -->\n <!-- <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\" class=\"text-center border border-light p-5\">\n\n    <p class=\"h4 mb-4\">Login Form</p>\n\n    <div class=\"form-row mb-4\">\n        <div class=\"col\">\n            <input type=\"email\" formControlName = \"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\">\n        </div>\n        <div class=\"col\">\n            <input type=\"password\" formControlName = \"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\">\n        </div>\n    </div>    \n    <button class=\"btn btn-info my-4 btn-block\" type=\"submit\">Login</button>\n    <hr>\n</form> -->\n<div class=\"container-fluid\"> \n    <div class=\"row\">\n            <div class=\"col-md-6 mr-auto\">\n                <div class=\"jumbotron\">\n                    <div class=\"card\">\n                        <h5 class=\"card-header\">Login</h5>\n                        <div class=\"card-body\">\n                            <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginsubmit(loginForm)\">\n                                <div class=\"form-group\">\n                                  <label for=\"username\">UserName:</label>\n                                  <input type=\"email\" formControlName = \"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\">\n                                  <!-- <div class=\"error\" *ngIf=\"loginForm.controls['username'].hasError('required') && loginForm.controls['username'].touched\">Username is required</div>-->\n                                </div> \n                                <div class=\"form-group\">\n                                  <label for=\"pwd\">Password:</label>\n                                  <input type=\"password\" formControlName = \"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\">\n                                   <!-- <div class=\"error\" *ngIf=\"loginForm.controls['password'].hasError('required') && loginForm.controls['password'].touched\">Password is required</div> -->\n                                </div> \n                                <button class=\"btn btn-info my-4 btn-block\" type=\"submit\">Login</button>\n                                <!-- <div *ngIf=\"invalidLogin\" class=\"error\">\n                                  <div>Invalid credentials.</div>\n                                </div>-->\n                            </form> \n                        </div>\n                    </div>\n                </div>\n            </div>\n             <div class=\"col-md-6 signupdiv\">\n                <strong class=\"display-4\">Don't Have Account?</strong>\n                <hr class=\"line\">\n                <a routerLink=\"/signup\" routerLinkActive=\"active\" class=\"btn btn-success signupbtn\">SignUp</a>\n            </div> \n        </div>\n    </div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  public flag = new Subject<any>();\n\n  public setFlag(message: any) {\n  this.flag.next(message);\n  }  \n   public getFlag(): Observable<any> {\n  return this.flag.asObservable();\n  }\n \n  constructor(private httpClient: HttpClient) {\n   \n  }\n\n  addUser(user:any) {\n    console.log(JSON.stringify(user));\n    return this.httpClient.post(\"http://65.0.107.22:8092/api/v1.0/tweets/register\", user);\n  }\n\n  \n\n  loginuser(user:any){\n    console.log(JSON.stringify(user));\n    return this.httpClient.post(\"http://65.0.107.22:8092/api/v1.0/tweets/login\", user);\n  }\n\n  gettweets(){\n    return this.httpClient.get(\"http://65.0.107.22:8092/api/v1.0/tweets/gettweets\");\n  }\n\n  addtweet(user:any){\n    return this.httpClient.post(\"http://65.0.107.22:8092/api/v1.0/tweets/posttweet\",user);\n  }\n\n  resetpass(user:any)\n  {\n    return this.httpClient.put(\"http://65.0.107.22:8092/api/v1.0/tweets/reset\",user);\n  }\n\n  postcomments(user:any)\n  {\n    return this.httpClient.post(\"http://65.0.107.22:8092/api/v1.0/tweets/reply\",user);\n  }\n\n  getAllUsers()\n  {\n    return this.httpClient.get(\"http://65.0.107.22:8092/api/v1.0/tweets/getallUsers\");\n  }\n\n  getAllTweets()\n  {\n    return this.httpClient.get(\"http://65.0.107.22:8092/api/v1.0/tweets/UsersTweet/?email=\"+sessionStorage.getItem('email'));\n  }\n\n  deletTweet(index:any)\n  {\n    return this.httpClient.delete(\"http://65.0.107.22:8092/api/v1.0/tweets/delete/?tweetId=\"+index);\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}